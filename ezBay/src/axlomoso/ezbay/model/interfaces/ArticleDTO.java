/*
 * Generated by XDoclet - Do not edit!
 */
package axlomoso.ezbay.model.interfaces;

/**
 * Value object for Article.
 *
 * Notice, this object is used to represent the state of an 
 * Article object. This value object
 * Is not connected to the database in any way, it is just a normal object used 
 * as a container for data from an EJB. 
 *
 * @xdoclet-generated at ${TODAY}
 * @copyright The XDoclet Team
 * @author XDoclet
 * @version ${version}
 */
public class ArticleDTO
   extends java.lang.Object
   implements java.io.Serializable, java.lang.Cloneable 
{

   private java.lang.String id;
   private boolean idHasBeenSet = false;

   private java.lang.Boolean enVente;
   private boolean enVenteHasBeenSet = false;

   private java.lang.String libelle;
   private boolean libelleHasBeenSet = false;

   private java.lang.String marque;
   private boolean marqueHasBeenSet = false;

   private java.lang.String modele;
   private boolean modeleHasBeenSet = false;

   private java.lang.Double prixVente;
   private boolean prixVenteHasBeenSet = false;

   private java.lang.Integer anneeFabrication;
   private boolean anneeFabricationHasBeenSet = false;

   private java.lang.String description;
   private boolean descriptionHasBeenSet = false;

   private java.util.Date dateLimite;
   private boolean dateLimiteHasBeenSet = false;

   private java.lang.String vendeurPseudo;
   private boolean vendeurPseudoHasBeenSet = false;

   private java.lang.String vendeurMembreId;
   private boolean vendeurMembreIdHasBeenSet = false;

   private java.lang.String vendeurId;
   private boolean vendeurIdHasBeenSet = false;

   private java.lang.String encherisseurPseudo;
   private boolean encherisseurPseudoHasBeenSet = false;

   private java.lang.String encherisseurMembreId;
   private boolean encherisseurMembreIdHasBeenSet = false;

   private java.lang.String encherisseurClientId;
   private boolean encherisseurClientIdHasBeenSet = false;

   private java.util.Date derniereEnchereDate;
   private boolean derniereEnchereDateHasBeenSet = false;

   private java.lang.Double derniereEnchereMontant;
   private boolean derniereEnchereMontantHasBeenSet = false;

   private java.lang.Integer nbEncheres;
   private boolean nbEncheresHasBeenSet = false;

   private java.lang.String acheteurPseudo;
   private boolean acheteurPseudoHasBeenSet = false;

   private java.lang.String acheteurId;
   private boolean acheteurIdHasBeenSet = false;

   private java.util.Date transactionDate;
   private boolean transactionDateHasBeenSet = false;

   private java.lang.Double transactionMontant;
   private boolean transactionMontantHasBeenSet = false;

   private java.lang.String primaryKey;

   public ArticleDTO()
   {
   }

   public ArticleDTO( java.lang.String id,java.lang.Boolean enVente,java.lang.String libelle,java.lang.String marque,java.lang.String modele,java.lang.Double prixVente,java.lang.Integer anneeFabrication,java.lang.String description,java.util.Date dateLimite,java.lang.String vendeurPseudo,java.lang.String vendeurMembreId,java.lang.String vendeurId,java.lang.String encherisseurPseudo,java.lang.String encherisseurMembreId,java.lang.String encherisseurClientId,java.util.Date derniereEnchereDate,java.lang.Double derniereEnchereMontant,java.lang.Integer nbEncheres,java.lang.String acheteurPseudo,java.lang.String acheteurId,java.util.Date transactionDate,java.lang.Double transactionMontant )
   {
       setId(id);
       setEnVente(enVente);
       setLibelle(libelle);
       setMarque(marque);
       setModele(modele);
       setPrixVente(prixVente);
       setAnneeFabrication(anneeFabrication);
       setDescription(description);
       setDateLimite(dateLimite);
       setVendeurPseudo(vendeurPseudo);
       setVendeurMembreId(vendeurMembreId);
       setVendeurId(vendeurId);
       setEncherisseurPseudo(encherisseurPseudo);
       setEncherisseurMembreId(encherisseurMembreId);
       setEncherisseurClientId(encherisseurClientId);
       setDerniereEnchereDate(derniereEnchereDate);
       setDerniereEnchereMontant(derniereEnchereMontant);
       setNbEncheres(nbEncheres);
       setAcheteurPseudo(acheteurPseudo);
       setAcheteurId(acheteurId);
       setTransactionDate(transactionDate);
       setTransactionMontant(transactionMontant);
	   primaryKey = this.getId();
   }

   /**
    * @deprecated use {@link #clone}
    */
   public ArticleDTO( ArticleDTO otherValue )
   {
	  this.id = otherValue.id;
	  idHasBeenSet = true;
	  this.enVente = otherValue.enVente;
	  enVenteHasBeenSet = true;
	  this.libelle = otherValue.libelle;
	  libelleHasBeenSet = true;
	  this.marque = otherValue.marque;
	  marqueHasBeenSet = true;
	  this.modele = otherValue.modele;
	  modeleHasBeenSet = true;
	  this.prixVente = otherValue.prixVente;
	  prixVenteHasBeenSet = true;
	  this.anneeFabrication = otherValue.anneeFabrication;
	  anneeFabricationHasBeenSet = true;
	  this.description = otherValue.description;
	  descriptionHasBeenSet = true;
	  this.dateLimite = otherValue.dateLimite;
	  dateLimiteHasBeenSet = true;
	  this.vendeurPseudo = otherValue.vendeurPseudo;
	  vendeurPseudoHasBeenSet = true;
	  this.vendeurMembreId = otherValue.vendeurMembreId;
	  vendeurMembreIdHasBeenSet = true;
	  this.vendeurId = otherValue.vendeurId;
	  vendeurIdHasBeenSet = true;
	  this.encherisseurPseudo = otherValue.encherisseurPseudo;
	  encherisseurPseudoHasBeenSet = true;
	  this.encherisseurMembreId = otherValue.encherisseurMembreId;
	  encherisseurMembreIdHasBeenSet = true;
	  this.encherisseurClientId = otherValue.encherisseurClientId;
	  encherisseurClientIdHasBeenSet = true;
	  this.derniereEnchereDate = otherValue.derniereEnchereDate;
	  derniereEnchereDateHasBeenSet = true;
	  this.derniereEnchereMontant = otherValue.derniereEnchereMontant;
	  derniereEnchereMontantHasBeenSet = true;
	  this.nbEncheres = otherValue.nbEncheres;
	  nbEncheresHasBeenSet = true;
	  this.acheteurPseudo = otherValue.acheteurPseudo;
	  acheteurPseudoHasBeenSet = true;
	  this.acheteurId = otherValue.acheteurId;
	  acheteurIdHasBeenSet = true;
	  this.transactionDate = otherValue.transactionDate;
	  transactionDateHasBeenSet = true;
	  this.transactionMontant = otherValue.transactionMontant;
	  transactionMontantHasBeenSet = true;

	  primaryKey = this.getId();
   }

   public java.lang.String getPrimaryKey()
   {
	  return primaryKey;
   }

   public void setPrimaryKey( java.lang.String primaryKey)
   {
      // it's also nice to update PK object - just in case
      // somebody would ask for it later...
      this.primaryKey = primaryKey;
	  setId( primaryKey );
   }

   public java.lang.String getId()
   {
	  return this.id;
   }

   public void setId( java.lang.String id )
   {
	  this.id = id;
	  idHasBeenSet = true;

      primaryKey = id;
   }

   public boolean idHasBeenSet(){
	  return idHasBeenSet;
   }
   public java.lang.Boolean getEnVente()
   {
	  return this.enVente;
   }

   public void setEnVente( java.lang.Boolean enVente )
   {
	  this.enVente = enVente;
	  enVenteHasBeenSet = true;

   }

   public boolean enVenteHasBeenSet(){
	  return enVenteHasBeenSet;
   }
   public java.lang.String getLibelle()
   {
	  return this.libelle;
   }

   public void setLibelle( java.lang.String libelle )
   {
	  this.libelle = libelle;
	  libelleHasBeenSet = true;

   }

   public boolean libelleHasBeenSet(){
	  return libelleHasBeenSet;
   }
   public java.lang.String getMarque()
   {
	  return this.marque;
   }

   public void setMarque( java.lang.String marque )
   {
	  this.marque = marque;
	  marqueHasBeenSet = true;

   }

   public boolean marqueHasBeenSet(){
	  return marqueHasBeenSet;
   }
   public java.lang.String getModele()
   {
	  return this.modele;
   }

   public void setModele( java.lang.String modele )
   {
	  this.modele = modele;
	  modeleHasBeenSet = true;

   }

   public boolean modeleHasBeenSet(){
	  return modeleHasBeenSet;
   }
   public java.lang.Double getPrixVente()
   {
	  return this.prixVente;
   }

   public void setPrixVente( java.lang.Double prixVente )
   {
	  this.prixVente = prixVente;
	  prixVenteHasBeenSet = true;

   }

   public boolean prixVenteHasBeenSet(){
	  return prixVenteHasBeenSet;
   }
   public java.lang.Integer getAnneeFabrication()
   {
	  return this.anneeFabrication;
   }

   public void setAnneeFabrication( java.lang.Integer anneeFabrication )
   {
	  this.anneeFabrication = anneeFabrication;
	  anneeFabricationHasBeenSet = true;

   }

   public boolean anneeFabricationHasBeenSet(){
	  return anneeFabricationHasBeenSet;
   }
   public java.lang.String getDescription()
   {
	  return this.description;
   }

   public void setDescription( java.lang.String description )
   {
	  this.description = description;
	  descriptionHasBeenSet = true;

   }

   public boolean descriptionHasBeenSet(){
	  return descriptionHasBeenSet;
   }
   public java.util.Date getDateLimite()
   {
	  return this.dateLimite;
   }

   public void setDateLimite( java.util.Date dateLimite )
   {
	  this.dateLimite = dateLimite;
	  dateLimiteHasBeenSet = true;

   }

   public boolean dateLimiteHasBeenSet(){
	  return dateLimiteHasBeenSet;
   }
   public java.lang.String getVendeurPseudo()
   {
	  return this.vendeurPseudo;
   }

   public void setVendeurPseudo( java.lang.String vendeurPseudo )
   {
	  this.vendeurPseudo = vendeurPseudo;
	  vendeurPseudoHasBeenSet = true;

   }

   public boolean vendeurPseudoHasBeenSet(){
	  return vendeurPseudoHasBeenSet;
   }
   public java.lang.String getVendeurMembreId()
   {
	  return this.vendeurMembreId;
   }

   public void setVendeurMembreId( java.lang.String vendeurMembreId )
   {
	  this.vendeurMembreId = vendeurMembreId;
	  vendeurMembreIdHasBeenSet = true;

   }

   public boolean vendeurMembreIdHasBeenSet(){
	  return vendeurMembreIdHasBeenSet;
   }
   public java.lang.String getVendeurId()
   {
	  return this.vendeurId;
   }

   public void setVendeurId( java.lang.String vendeurId )
   {
	  this.vendeurId = vendeurId;
	  vendeurIdHasBeenSet = true;

   }

   public boolean vendeurIdHasBeenSet(){
	  return vendeurIdHasBeenSet;
   }
   public java.lang.String getEncherisseurPseudo()
   {
	  return this.encherisseurPseudo;
   }

   public void setEncherisseurPseudo( java.lang.String encherisseurPseudo )
   {
	  this.encherisseurPseudo = encherisseurPseudo;
	  encherisseurPseudoHasBeenSet = true;

   }

   public boolean encherisseurPseudoHasBeenSet(){
	  return encherisseurPseudoHasBeenSet;
   }
   public java.lang.String getEncherisseurMembreId()
   {
	  return this.encherisseurMembreId;
   }

   public void setEncherisseurMembreId( java.lang.String encherisseurMembreId )
   {
	  this.encherisseurMembreId = encherisseurMembreId;
	  encherisseurMembreIdHasBeenSet = true;

   }

   public boolean encherisseurMembreIdHasBeenSet(){
	  return encherisseurMembreIdHasBeenSet;
   }
   public java.lang.String getEncherisseurClientId()
   {
	  return this.encherisseurClientId;
   }

   public void setEncherisseurClientId( java.lang.String encherisseurClientId )
   {
	  this.encherisseurClientId = encherisseurClientId;
	  encherisseurClientIdHasBeenSet = true;

   }

   public boolean encherisseurClientIdHasBeenSet(){
	  return encherisseurClientIdHasBeenSet;
   }
   public java.util.Date getDerniereEnchereDate()
   {
	  return this.derniereEnchereDate;
   }

   public void setDerniereEnchereDate( java.util.Date derniereEnchereDate )
   {
	  this.derniereEnchereDate = derniereEnchereDate;
	  derniereEnchereDateHasBeenSet = true;

   }

   public boolean derniereEnchereDateHasBeenSet(){
	  return derniereEnchereDateHasBeenSet;
   }
   public java.lang.Double getDerniereEnchereMontant()
   {
	  return this.derniereEnchereMontant;
   }

   public void setDerniereEnchereMontant( java.lang.Double derniereEnchereMontant )
   {
	  this.derniereEnchereMontant = derniereEnchereMontant;
	  derniereEnchereMontantHasBeenSet = true;

   }

   public boolean derniereEnchereMontantHasBeenSet(){
	  return derniereEnchereMontantHasBeenSet;
   }
   public java.lang.Integer getNbEncheres()
   {
	  return this.nbEncheres;
   }

   public void setNbEncheres( java.lang.Integer nbEncheres )
   {
	  this.nbEncheres = nbEncheres;
	  nbEncheresHasBeenSet = true;

   }

   public boolean nbEncheresHasBeenSet(){
	  return nbEncheresHasBeenSet;
   }
   public java.lang.String getAcheteurPseudo()
   {
	  return this.acheteurPseudo;
   }

   public void setAcheteurPseudo( java.lang.String acheteurPseudo )
   {
	  this.acheteurPseudo = acheteurPseudo;
	  acheteurPseudoHasBeenSet = true;

   }

   public boolean acheteurPseudoHasBeenSet(){
	  return acheteurPseudoHasBeenSet;
   }
   public java.lang.String getAcheteurId()
   {
	  return this.acheteurId;
   }

   public void setAcheteurId( java.lang.String acheteurId )
   {
	  this.acheteurId = acheteurId;
	  acheteurIdHasBeenSet = true;

   }

   public boolean acheteurIdHasBeenSet(){
	  return acheteurIdHasBeenSet;
   }
   public java.util.Date getTransactionDate()
   {
	  return this.transactionDate;
   }

   public void setTransactionDate( java.util.Date transactionDate )
   {
	  this.transactionDate = transactionDate;
	  transactionDateHasBeenSet = true;

   }

   public boolean transactionDateHasBeenSet(){
	  return transactionDateHasBeenSet;
   }
   public java.lang.Double getTransactionMontant()
   {
	  return this.transactionMontant;
   }

   public void setTransactionMontant( java.lang.Double transactionMontant )
   {
	  this.transactionMontant = transactionMontant;
	  transactionMontantHasBeenSet = true;

   }

   public boolean transactionMontantHasBeenSet(){
	  return transactionMontantHasBeenSet;
   }

   public String toString()
   {
	  StringBuffer str = new StringBuffer("{");

	  str.append("id=" + getId() + " " + "enVente=" + getEnVente() + " " + "libelle=" + getLibelle() + " " + "marque=" + getMarque() + " " + "modele=" + getModele() + " " + "prixVente=" + getPrixVente() + " " + "anneeFabrication=" + getAnneeFabrication() + " " + "description=" + getDescription() + " " + "dateLimite=" + getDateLimite() + " " + "vendeurPseudo=" + getVendeurPseudo() + " " + "vendeurMembreId=" + getVendeurMembreId() + " " + "vendeurId=" + getVendeurId() + " " + "encherisseurPseudo=" + getEncherisseurPseudo() + " " + "encherisseurMembreId=" + getEncherisseurMembreId() + " " + "encherisseurClientId=" + getEncherisseurClientId() + " " + "derniereEnchereDate=" + getDerniereEnchereDate() + " " + "derniereEnchereMontant=" + getDerniereEnchereMontant() + " " + "nbEncheres=" + getNbEncheres() + " " + "acheteurPseudo=" + getAcheteurPseudo() + " " + "acheteurId=" + getAcheteurId() + " " + "transactionDate=" + getTransactionDate() + " " + "transactionMontant=" + getTransactionMontant());
	  str.append('}');

	  return(str.toString());
   }

   /**
    * A Value Object has an identity if the attributes making its Primary Key have all been set. An object without identity is never equal to any other object.
    *
    * @return true if this instance has an identity.
    */
   protected boolean hasIdentity()
   {
	  return idHasBeenSet;
   }

   /**
    *
    * @deprecated use {@link #equals}
    */
   public boolean isIdentical(Object other)
   {
          if (other instanceof ArticleDTO)
          {
                 ArticleDTO that = (ArticleDTO) other;
                 boolean lEquals = true;
                 if( this.id == null )
                 {
                        lEquals = lEquals && ( that.id == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.id.equals( that.id );
                 }
                 if( this.enVente == null )
                 {
                        lEquals = lEquals && ( that.enVente == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.enVente.equals( that.enVente );
                 }
                 if( this.libelle == null )
                 {
                        lEquals = lEquals && ( that.libelle == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.libelle.equals( that.libelle );
                 }
                 if( this.marque == null )
                 {
                        lEquals = lEquals && ( that.marque == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.marque.equals( that.marque );
                 }
                 if( this.modele == null )
                 {
                        lEquals = lEquals && ( that.modele == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.modele.equals( that.modele );
                 }
                 if( this.prixVente == null )
                 {
                        lEquals = lEquals && ( that.prixVente == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.prixVente.equals( that.prixVente );
                 }
                 if( this.anneeFabrication == null )
                 {
                        lEquals = lEquals && ( that.anneeFabrication == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.anneeFabrication.equals( that.anneeFabrication );
                 }
                 if( this.description == null )
                 {
                        lEquals = lEquals && ( that.description == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.description.equals( that.description );
                 }
                 if( this.dateLimite == null )
                 {
                        lEquals = lEquals && ( that.dateLimite == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.dateLimite.equals( that.dateLimite );
                 }
                 if( this.vendeurPseudo == null )
                 {
                        lEquals = lEquals && ( that.vendeurPseudo == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.vendeurPseudo.equals( that.vendeurPseudo );
                 }
                 if( this.vendeurMembreId == null )
                 {
                        lEquals = lEquals && ( that.vendeurMembreId == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.vendeurMembreId.equals( that.vendeurMembreId );
                 }
                 if( this.vendeurId == null )
                 {
                        lEquals = lEquals && ( that.vendeurId == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.vendeurId.equals( that.vendeurId );
                 }
                 if( this.encherisseurPseudo == null )
                 {
                        lEquals = lEquals && ( that.encherisseurPseudo == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.encherisseurPseudo.equals( that.encherisseurPseudo );
                 }
                 if( this.encherisseurMembreId == null )
                 {
                        lEquals = lEquals && ( that.encherisseurMembreId == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.encherisseurMembreId.equals( that.encherisseurMembreId );
                 }
                 if( this.encherisseurClientId == null )
                 {
                        lEquals = lEquals && ( that.encherisseurClientId == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.encherisseurClientId.equals( that.encherisseurClientId );
                 }
                 if( this.derniereEnchereDate == null )
                 {
                        lEquals = lEquals && ( that.derniereEnchereDate == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.derniereEnchereDate.equals( that.derniereEnchereDate );
                 }
                 if( this.derniereEnchereMontant == null )
                 {
                        lEquals = lEquals && ( that.derniereEnchereMontant == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.derniereEnchereMontant.equals( that.derniereEnchereMontant );
                 }
                 if( this.nbEncheres == null )
                 {
                        lEquals = lEquals && ( that.nbEncheres == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.nbEncheres.equals( that.nbEncheres );
                 }
                 if( this.acheteurPseudo == null )
                 {
                        lEquals = lEquals && ( that.acheteurPseudo == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.acheteurPseudo.equals( that.acheteurPseudo );
                 }
                 if( this.acheteurId == null )
                 {
                        lEquals = lEquals && ( that.acheteurId == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.acheteurId.equals( that.acheteurId );
                 }
                 if( this.transactionDate == null )
                 {
                        lEquals = lEquals && ( that.transactionDate == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.transactionDate.equals( that.transactionDate );
                 }
                 if( this.transactionMontant == null )
                 {
                        lEquals = lEquals && ( that.transactionMontant == null );
                 }
                 else
                 {
                        lEquals = lEquals && this.transactionMontant.equals( that.transactionMontant );
                 }

                 return lEquals;
          }
          else
          {
                 return false;
          }
   }

    public boolean equals(Object other) {

        //If it's not the correct type, clearly it isn't equal to this.
        if (!(other instanceof ArticleDTO)) { 
            return false;
        }

        return equals((ArticleDTO) other);
    }

    /**
     * This class is not using strict ordering. This means that the object is not Comparable, and
     * each check for equality will test all members for equality. We do not check collections for
     * equality however, so you would be wise to not use this if you have collection typed EJB References.
     */
    public boolean equals(ArticleDTO that) {

        //try to get lucky.
        if (this == that) {
            return true;
        }
        //this clearly isn't null.
        if(null == that) {
            return false;
        }

        if(this.id != that.id) {

            if( this.id == null || that.id == null ) {
                return false;
            }

            if(!this.id.equals(that.id)) {
                return false;
            }

        }

        if(this.enVente != that.enVente) {

            if( this.enVente == null || that.enVente == null ) {
                return false;
            }

            if(!this.enVente.equals(that.enVente)) {
                return false;
            }

        }

        if(this.libelle != that.libelle) {

            if( this.libelle == null || that.libelle == null ) {
                return false;
            }

            if(!this.libelle.equals(that.libelle)) {
                return false;
            }

        }

        if(this.marque != that.marque) {

            if( this.marque == null || that.marque == null ) {
                return false;
            }

            if(!this.marque.equals(that.marque)) {
                return false;
            }

        }

        if(this.modele != that.modele) {

            if( this.modele == null || that.modele == null ) {
                return false;
            }

            if(!this.modele.equals(that.modele)) {
                return false;
            }

        }

        if(this.prixVente != that.prixVente) {

            if( this.prixVente == null || that.prixVente == null ) {
                return false;
            }

            if(!this.prixVente.equals(that.prixVente)) {
                return false;
            }

        }

        if(this.anneeFabrication != that.anneeFabrication) {

            if( this.anneeFabrication == null || that.anneeFabrication == null ) {
                return false;
            }

            if(!this.anneeFabrication.equals(that.anneeFabrication)) {
                return false;
            }

        }

        if(this.description != that.description) {

            if( this.description == null || that.description == null ) {
                return false;
            }

            if(!this.description.equals(that.description)) {
                return false;
            }

        }

        if(this.dateLimite != that.dateLimite) {

            if( this.dateLimite == null || that.dateLimite == null ) {
                return false;
            }

            if(!this.dateLimite.equals(that.dateLimite)) {
                return false;
            }

        }

        if(this.vendeurPseudo != that.vendeurPseudo) {

            if( this.vendeurPseudo == null || that.vendeurPseudo == null ) {
                return false;
            }

            if(!this.vendeurPseudo.equals(that.vendeurPseudo)) {
                return false;
            }

        }

        if(this.vendeurMembreId != that.vendeurMembreId) {

            if( this.vendeurMembreId == null || that.vendeurMembreId == null ) {
                return false;
            }

            if(!this.vendeurMembreId.equals(that.vendeurMembreId)) {
                return false;
            }

        }

        if(this.vendeurId != that.vendeurId) {

            if( this.vendeurId == null || that.vendeurId == null ) {
                return false;
            }

            if(!this.vendeurId.equals(that.vendeurId)) {
                return false;
            }

        }

        if(this.encherisseurPseudo != that.encherisseurPseudo) {

            if( this.encherisseurPseudo == null || that.encherisseurPseudo == null ) {
                return false;
            }

            if(!this.encherisseurPseudo.equals(that.encherisseurPseudo)) {
                return false;
            }

        }

        if(this.encherisseurMembreId != that.encherisseurMembreId) {

            if( this.encherisseurMembreId == null || that.encherisseurMembreId == null ) {
                return false;
            }

            if(!this.encherisseurMembreId.equals(that.encherisseurMembreId)) {
                return false;
            }

        }

        if(this.encherisseurClientId != that.encherisseurClientId) {

            if( this.encherisseurClientId == null || that.encherisseurClientId == null ) {
                return false;
            }

            if(!this.encherisseurClientId.equals(that.encherisseurClientId)) {
                return false;
            }

        }

        if(this.derniereEnchereDate != that.derniereEnchereDate) {

            if( this.derniereEnchereDate == null || that.derniereEnchereDate == null ) {
                return false;
            }

            if(!this.derniereEnchereDate.equals(that.derniereEnchereDate)) {
                return false;
            }

        }

        if(this.derniereEnchereMontant != that.derniereEnchereMontant) {

            if( this.derniereEnchereMontant == null || that.derniereEnchereMontant == null ) {
                return false;
            }

            if(!this.derniereEnchereMontant.equals(that.derniereEnchereMontant)) {
                return false;
            }

        }

        if(this.nbEncheres != that.nbEncheres) {

            if( this.nbEncheres == null || that.nbEncheres == null ) {
                return false;
            }

            if(!this.nbEncheres.equals(that.nbEncheres)) {
                return false;
            }

        }

        if(this.acheteurPseudo != that.acheteurPseudo) {

            if( this.acheteurPseudo == null || that.acheteurPseudo == null ) {
                return false;
            }

            if(!this.acheteurPseudo.equals(that.acheteurPseudo)) {
                return false;
            }

        }

        if(this.acheteurId != that.acheteurId) {

            if( this.acheteurId == null || that.acheteurId == null ) {
                return false;
            }

            if(!this.acheteurId.equals(that.acheteurId)) {
                return false;
            }

        }

        if(this.transactionDate != that.transactionDate) {

            if( this.transactionDate == null || that.transactionDate == null ) {
                return false;
            }

            if(!this.transactionDate.equals(that.transactionDate)) {
                return false;
            }

        }

        if(this.transactionMontant != that.transactionMontant) {

            if( this.transactionMontant == null || that.transactionMontant == null ) {
                return false;
            }

            if(!this.transactionMontant.equals(that.transactionMontant)) {
                return false;
            }

        }

        return true;

    }

    public Object clone() throws java.lang.CloneNotSupportedException {
        ArticleDTO other = (ArticleDTO) super.clone();

        return other;
    }

    public ReadOnlyArticleDTO getReadOnlyArticleDTO() {
        return new ReadOnlyArticleDTO();
    }

    public int hashCode(){
	  int result = 17;
      result = 37*result + ((this.id != null) ? this.id.hashCode() : 0);

      result = 37*result + ((this.enVente != null) ? this.enVente.hashCode() : 0);

      result = 37*result + ((this.libelle != null) ? this.libelle.hashCode() : 0);

      result = 37*result + ((this.marque != null) ? this.marque.hashCode() : 0);

      result = 37*result + ((this.modele != null) ? this.modele.hashCode() : 0);

      result = 37*result + ((this.prixVente != null) ? this.prixVente.hashCode() : 0);

      result = 37*result + ((this.anneeFabrication != null) ? this.anneeFabrication.hashCode() : 0);

      result = 37*result + ((this.description != null) ? this.description.hashCode() : 0);

      result = 37*result + ((this.dateLimite != null) ? this.dateLimite.hashCode() : 0);

      result = 37*result + ((this.vendeurPseudo != null) ? this.vendeurPseudo.hashCode() : 0);

      result = 37*result + ((this.vendeurMembreId != null) ? this.vendeurMembreId.hashCode() : 0);

      result = 37*result + ((this.vendeurId != null) ? this.vendeurId.hashCode() : 0);

      result = 37*result + ((this.encherisseurPseudo != null) ? this.encherisseurPseudo.hashCode() : 0);

      result = 37*result + ((this.encherisseurMembreId != null) ? this.encherisseurMembreId.hashCode() : 0);

      result = 37*result + ((this.encherisseurClientId != null) ? this.encherisseurClientId.hashCode() : 0);

      result = 37*result + ((this.derniereEnchereDate != null) ? this.derniereEnchereDate.hashCode() : 0);

      result = 37*result + ((this.derniereEnchereMontant != null) ? this.derniereEnchereMontant.hashCode() : 0);

      result = 37*result + ((this.nbEncheres != null) ? this.nbEncheres.hashCode() : 0);

      result = 37*result + ((this.acheteurPseudo != null) ? this.acheteurPseudo.hashCode() : 0);

      result = 37*result + ((this.acheteurId != null) ? this.acheteurId.hashCode() : 0);

      result = 37*result + ((this.transactionDate != null) ? this.transactionDate.hashCode() : 0);

      result = 37*result + ((this.transactionMontant != null) ? this.transactionMontant.hashCode() : 0);

	  return result;
    }

    /**
     * Covariant function so the compiler can choose the proper one at compile time,
     * eliminates the need for XDoclet to really understand compiletime typing.
     *
     * Read only collections need to be synchronized. Once we start giving out handles
     * to these collections, they'll be used in other threads sooner or later. 
     */
    private static java.util.Collection wrapCollection(java.util.Collection input) {
        return java.util.Collections.synchronizedCollection(input);
    }
    /**
     * Covariant function so the compiler can choose the proper one at compile time,
     * eliminates the need for XDoclet to really understand compiletime typing.
     *
     * Read only collections need to be synchronized. Once we start giving out handles
     * to these collections, they'll be used in other threads sooner or later. 
     */
    private static java.util.Set wrapCollection(java.util.Set input) {
        return java.util.Collections.synchronizedSet(input);
    }
    /**
     * Covariant function. This is used in covariant form so that the compiler
     * can do some of our conditional branches for us. If I made these functions
     * have different names, then XDoclet would have to choose between them based on 
     * compiletime types, that wouldn't be easy. 
     */
    private static java.util.Collection wrapReadOnly(java.util.Collection input) {
        return java.util.Collections.unmodifiableCollection(input);
    }
    /**
     * Covariant function. This is used in covariant form so that the compiler
     * can do some of our conditional branches for us. If I made these functions
     * have different names, then XDoclet would have to choose between them based on 
     * compiletime types, that wouldn't be easy. 
     */
    private static java.util.Set wrapReadOnly(java.util.Set input) {
        return java.util.Collections.unmodifiableSet(input);
    }

    private final class ReadOnlyArticleDTO 
    implements java.lang.Cloneable, java.io.Serializable 
    {
        private ArticleDTO underlying() {
            return ArticleDTO.this;
        }

       public java.lang.String getId() {
              return underlying().id;
       }

       public java.lang.Boolean getEnVente() {
              return underlying().enVente;
       }

       public java.lang.String getLibelle() {
              return underlying().libelle;
       }

       public java.lang.String getMarque() {
              return underlying().marque;
       }

       public java.lang.String getModele() {
              return underlying().modele;
       }

       public java.lang.Double getPrixVente() {
              return underlying().prixVente;
       }

       public java.lang.Integer getAnneeFabrication() {
              return underlying().anneeFabrication;
       }

       public java.lang.String getDescription() {
              return underlying().description;
       }

       public java.util.Date getDateLimite() {
              return underlying().dateLimite;
       }

       public java.lang.String getVendeurPseudo() {
              return underlying().vendeurPseudo;
       }

       public java.lang.String getVendeurMembreId() {
              return underlying().vendeurMembreId;
       }

       public java.lang.String getVendeurId() {
              return underlying().vendeurId;
       }

       public java.lang.String getEncherisseurPseudo() {
              return underlying().encherisseurPseudo;
       }

       public java.lang.String getEncherisseurMembreId() {
              return underlying().encherisseurMembreId;
       }

       public java.lang.String getEncherisseurClientId() {
              return underlying().encherisseurClientId;
       }

       public java.util.Date getDerniereEnchereDate() {
              return underlying().derniereEnchereDate;
       }

       public java.lang.Double getDerniereEnchereMontant() {
              return underlying().derniereEnchereMontant;
       }

       public java.lang.Integer getNbEncheres() {
              return underlying().nbEncheres;
       }

       public java.lang.String getAcheteurPseudo() {
              return underlying().acheteurPseudo;
       }

       public java.lang.String getAcheteurId() {
              return underlying().acheteurId;
       }

       public java.util.Date getTransactionDate() {
              return underlying().transactionDate;
       }

       public java.lang.Double getTransactionMontant() {
              return underlying().transactionMontant;
       }

        public int hashCode() {
            return 101 * underlying().hashCode();
        }

        public boolean equals(Object o) {
            if(o instanceof ReadOnlyArticleDTO) {
                return this.equals((ReadOnlyArticleDTO) o);
            }
            return false;
        }

        public boolean equals(ReadOnlyArticleDTO that) {
            if(null == that) {
                return false;
            }

            return this.underlying().equals(that.underlying());
        }

    }

}
